
Warnmeldung:
In if (is.na(dataV)) { :
  Bedingung hat L"ange > 1 und nur das erste Element wird benutzt
> 
> 
> 
> 
> 
> 
> 
> # Mixed design ANOVA: 1 between subjects factor, 1 within subjects factor
> 
> 
> 
> 
> 
> 
> widths=c(4/9,4/9,1/9)
> heights=c(1,1,1,2)
> widths/heights
[1] 0.4444444 0.4444444 0.1111111 0.2222222
Warnmeldung:
In widths/heights : L"ange des l"angeren Objektes
 	 ist kein Vielfaches der L"ange des k"urzeren Objektes
> sum(widths)/sum(heights)
[1] 0.2
> sum(widths)
[1] 1
> sum(heights)
[1] 5
> heights=c(2/9,2/9,2/9,4/9)
> sum(heights)
[1] 1.111111
> sum(widths)
[1] 1
> sum(widths)
[1] 1
> hw<-c(sum(widths),sum(heights))*10
> hw
[1] 10.00000 11.11111
> hw<-c(sum(widths),sum(heights))*15
> 
> plot_original_data_vector<-function(dataV=NA,src="",layerNames=""){
+ dev.off.all()
+ # load data from source
+ if(is.na(dataV)){
+ dataV<-load_data_as_vectors(src,layerNames)
+ }
+ #colors
+ distinctcols<-read.csv("./code/scripts/64distinctColors.csv")
+ names(distinctcols)<-c("r","g","b")
+ distinctcols<-distinctcols/255
+ distinctcols<-apply(distinctcols,1,function(x){do.call(rgb,as.list(x))})
+ dataV$labelCols<-distinctcols[1:length(dataV$uniqueLabels)]
+ names(dataV$labelCols)<-dataV$uniqueLabels
+ 
+ # PLOT
+ laymat<-matrix(c(1:6),3,2,byrow=T)
+ laymat<-rbind(laymat,c(7,7))
+ laymat<-cbind(laymat,8)
+ widths=c(4/9,4/9,1/9)
+ heights=c(2/9,2/9,2/9,4/9)
+ lo<-layout(laymat,widths=widths,heights=heights)
+ par(mai=rep(0,4),oma=rep(0,4))
+ hw<-c(sum(widths),sum(heights))*15
+ pdf(paste0("./code/output/","original_data_vector.pdf"),hw[1],hw[2])
+ 
+ for (i in c(1:length(dataV$data))) {
+ print(i)
+ par(mai=rep(0,4))
+ plot(dataV$data[[i]][1:100,]
+ ,col=dataV$labelCols[
+ as.character(dataV$data[[i]]$LU)
+ ]
+ ,border=NA,main=years[i])
+ }
+ print("legend")
+ plot(1,type="n",axes=FALSE,bty="n",xlab="",ylab="")
+ legend("left",legend=dataV$uniqueLabels,fill=dataV$labelCols,horiz=FALSE,ce<V$uniqueLabels,fill=dataV$labelCols,horiz=FALSE,cex                        =1,border=NA,bty="n")
+ dev.off.all()
+ }
> plot_original_data_vector(dataV)   
[1] 1
[1] 2
[1] 3
[1] 4
[1] 5
[1] 6
[1] 7
[1] "legend"
Warnmeldung:
In if (is.na(dataV)) { :
  Bedingung hat L"ange > 1 und nur das erste Element wird benutzt
> 
> plot_original_data_vector<-function(dataV=NA,src="",layerNames=""){
+ dev.off.all()
+ # load data from source
+ if(is.na(dataV)){
+ dataV<-load_data_as_vectors(src,layerNames)
+ }
+ #colors
+ distinctcols<-read.csv("./code/scripts/64distinctColors.csv")
+ names(distinctcols)<-c("r","g","b")
+ distinctcols<-distinctcols/255
+ distinctcols<-apply(distinctcols,1,function(x){do.call(rgb,as.list(x))})
+ dataV$labelCols<-distinctcols[1:length(dataV$uniqueLabels)]
+ names(dataV$labelCols)<-dataV$uniqueLabels
+ 
+ # PLOT
+ laymat<-matrix(c(1:6),3,2,byrow=T)
+ laymat<-rbind(laymat,c(7,7))
+ laymat<-cbind(laymat,8)
+ widths=c(4/9,4/9,1/9)
+ heights=c(2/9,2/9,2/9,4/9)
+ lo<-layout(laymat,widths=widths,heights=heights)
+ par(mai=rep(0,4),oma=rep(0,4))
+ hw<-c(sum(widths),sum(heights))*15
+ pdf(paste0("./code/output/","original_data_vector.pdf"),hw[1],hw[2])
+ layout(lo)
+ for (i in c(1:length(dataV$data))) {
+ print(i)
+ par(mai=rep(0,4))
+ plot(dataV$data[[i]][1:100,]
+ ,col=dataV$labelCols[
+ as.character(dataV$data[[i]]$LU)
+ ]
+ ,border=NA,main=years[i])
+ }
+ print("legend")
+ plot(1,type="n",axes=FALSE,bty="n",xlab="",ylab="")
+ legend("left",legend=dataV$uniqueLabels,fill=dataV$labelCols,horiz=FALSE,ce<V$uniqueLabels,fill=dataV$labelCols,horiz=FALSE,cex                        =1,border=NA,bty="n")
+ dev.off.all()
+ }
> 
> plot_original_data_vector(dataV)   
Fehler in layout(lo) : layout matrix must contain at least one reference
to each of the values {1 ... 8}
Zus"atzlich: Warnmeldung:
In if (is.na(dataV)) { :
  Bedingung hat L"ange > 1 und nur das erste Element wird benutzt
> 
> plot_original_data_vector<-function(dataV=NA,src="",layerNames=""){
+ dev.off.all()
+ # load data from source
+ if(is.na(dataV)){
+ dataV<-load_data_as_vectors(src,layerNames)
+ }
+ #colors
+ distinctcols<-read.csv("./code/scripts/64distinctColors.csv")
+ names(distinctcols)<-c("r","g","b")
+ distinctcols<-distinctcols/255
+ distinctcols<-apply(distinctcols,1,function(x){do.call(rgb,as.list(x))})
+ dataV$labelCols<-distinctcols[1:length(dataV$uniqueLabels)]
+ names(dataV$labelCols)<-dataV$uniqueLabels
+ 
+ # PLOT
+ laymat<-matrix(c(1:6),3,2,byrow=T)
+ laymat<-rbind(laymat,c(7,7))
+ laymat<-cbind(laymat,8)
+ widths=c(4/9,4/9,1/9)
+ heights=c(2/9,2/9,2/9,4/9)
+ lo<-layout(laymat,widths=widths,heights=heights)
+ par(mai=rep(0,4),oma=rep(0,4))
+ hw<-c(sum(widths),sum(heights))*15
+ pdf(paste0("./code/output/","original_data_vector.pdf"),hw[1],hw[2])
+ for (i in c(1:length(dataV$data))) {
+ print(i)
+ plot(dataV$data[[i]][1:100,]
+ ,col=dataV$labelCols[
+ as.character(dataV$data[[i]]$LU)
+ ]
+ ,border=NA,main=years[i])
+ }
+ print("legend")
+ plot(1,type="n",axes=FALSE,bty="n",xlab="",ylab="")
+ legend("left",legend=dataV$uniqueLabels,fill=dataV$labelCols,horiz=FALSE,ce<V$uniqueLabels,fill=dataV$labelCols,horiz=FALSE,cex                        =1,border=NA,bty="n")
+ dev.off.all()
+ }
> 
> plot_original_data_vector(dataV)   
[1] 1
[1] 2
[1] 3
[1] 4
[1] 5
[1] 6
[1] 7
[1] "legend"
Warnmeldung:
In if (is.na(dataV)) { :
  Bedingung hat L"ange > 1 und nur das erste Element wird benutzt
> plot_original_data_vector<-function(dataV=NA,src="",layerNames=""){
+ dev.off.all()
+ # load data from source
+ if(is.na(dataV)){
+ dataV<-load_data_as_vectors(src,layerNames)
+ }
+ #colors
+ distinctcols<-read.csv("./code/scripts/64distinctColors.csv")
+ names(distinctcols)<-c("r","g","b")
+ distinctcols<-distinctcols/255
+ distinctcols<-apply(distinctcols,1,function(x){do.call(rgb,as.list(x))})
+ dataV$labelCols<-distinctcols[1:length(dataV$uniqueLabels)]
+ names(dataV$labelCols)<-dataV$uniqueLabels
+ 
+ # PLOT
+ laymat<-matrix(c(1:6),3,2,byrow=T)
+ laymat<-rbind(laymat,c(7,7))
+ laymat<-cbind(laymat,8)
+ widths=c(4/9,4/9,1/9)
+ heights=c(2/9,2/9,2/9,4/9)
+ hw<-c(sum(widths),sum(heights))*15
+ par(mai=rep(0,4),oma=rep(0,4))
+ pdf(paste0("./code/output/","original_data_vector.pdf"),hw[1],hw[2])
+ lo<-layout(laymat,widths=widths,heights=heights)
+ for (i in c(1:length(dataV$data))) {
+ print(i)
+ plot(dataV$data[[i]][1:100,]
+ ,col=dataV$labelCols[
+ as.character(dataV$data[[i]]$LU)
+ ]
+ ,border=NA,main=years[i])
+ }
+ print("legend")
+ plot(1,type="n",axes=FALSE,bty="n",xlab="",ylab="")
+ legend("left",legend=dataV$uniqueLabels,fill=dataV$labelCols,horiz=FALSE,ce<V$uniqueLabels,fill=dataV$labelCols,horiz=FALSE,cex                        =1,border=NA,bty="n")
+ dev.off.all()
+ }
> 
> plot_original_data_vector(dataV)   
[1] 1
[1] 2
[1] 3
[1] 4
[1] 5
[1] 6
[1] 7
[1] "legend"
Warnmeldung:
In if (is.na(dataV)) { :
  Bedingung hat L"ange > 1 und nur das erste Element wird benutzt
> widths=c(4/9,4/9,1/9)
> heights=c(2/9,2/9,2/9,4/9)
> hw<-c(sum(widths),sum(heights))*15
> hw
[1] 15.00000 16.66667
> 
> 
> plot_original_data_vector<-function(dataV=NA,src="",layerNames=""){
+ dev.off.all()
+ # load data from source
+ if(is.na(dataV)){
+ dataV<-load_data_as_vectors(src,layerNames)
+ }
+ #colors
+ distinctcols<-read.csv("./code/scripts/64distinctColors.csv")
+ names(distinctcols)<-c("r","g","b")
+ distinctcols<-distinctcols/255
+ distinctcols<-apply(distinctcols,1,function(x){do.call(rgb,as.list(x))})
+ dataV$labelCols<-distinctcols[1:length(dataV$uniqueLabels)]
+ names(dataV$labelCols)<-dataV$uniqueLabels
+ 
+ # PLOT
+ laymat<-matrix(c(1:6),3,2,byrow=T)
+ laymat<-rbind(laymat,c(7,7))
+ laymat<-cbind(laymat,8)
+ widths=c(4/9,4/9,1/9)
+ heights=c(2/9,2/9,2/9,4/9)
+ hw<-c(sum(widths),sum(heights))*15
+ par(mai=rep(0,4),oma=rep(0,4))
+ pdf(paste0("./code/output/","original_data_vector.pdf"),hw[1],hw[2])
+ lo<-layout(laymat,widths=widths,heights=heights)
+ for (i in c(1:length(dataV$data))) {
+ print(i)
+ plot(dataV$data[[i]]
+ ,col=dataV$labelCols[
+ as.character(dataV$data[[i]]$LU)
+ ]
+ ,border=NA,main=years[i])
+ }
+ print("legend")
+ plot(1,type="n",axes=FALSE,bty="n",xlab="",ylab="")
+ legend("left",legend=dataV$uniqueLabels,fill=dataV$labelCols,horiz=FALSE,ce<V$uniqueLabels,fill=dataV$labelCols,horiz=FALSE,cex                        =1,border=NA,bty="n")
+ dev.off.all()
+ }
> 
> plot_original_data_vector(dataV)   
[1] 1
[1] 2
[1] 3
[1] 4
[1] 5
[1] 6
[1] 7
[1] "legend"
Warnmeldung:
In if (is.na(dataV)) { :
  Bedingung hat L"ange > 1 und nur das erste Element wird benutzt
> 
> plot_original_data_vector<-function(dataV=NA,src="",layerNames=""){
+ dev.off.all()
+ # load data from source
+ if(is.na(dataV)){
+ dataV<-load_data_as_vectors(src,layerNames)
+ }
+ #colors
+ distinctcols<-read.csv("./code/scripts/64distinctColors.csv")
+ names(distinctcols)<-c("r","g","b")
+ distinctcols<-distinctcols/255
+ distinctcols<-apply(distinctcols,1,function(x){do.call(rgb,as.list(x))})
+ dataV$labelCols<-distinctcols[1:length(dataV$uniqueLabels)]
+ names(dataV$labelCols)<-dataV$uniqueLabels
+ 
+ # PLOT
+ laymat<-matrix(c(1:6),3,2,byrow=T)
+ laymat<-rbind(laymat,c(7,7))
+ laymat<-cbind(laymat,8)
+ widths=c(4/9,4/9,1/9)
+ heights=c(2/9,2/9,2/9,4/9)
+ hw<-c(sum(widths),sum(heights))*15
+ par(mai=rep(0,4),oma=rep(0,4))
+ # pdf(paste0("./code/output/","original_data_vector.pdf"),hw[1],hw[2])
+ lo<-layout(laymat,widths=widths,heights=heights)
+ for (i in c(1:length(dataV$data))) {
+ print(i)
+ plot(dataV$data[[i]]
+ ,col=dataV$labelCols[
+ as.character(dataV$data[[i]]$LU)
+ ]
+ ,border=NA,main=years[i])
+ }
+ print("legend")
+ plot(1,type="n",axes=FALSE,bty="n",xlab="",ylab="")
+ legend("left",legend=dataV$uniqueLabels,fill=dataV$labelCols,horiz=FALSE,ce<V$uniqueLabels,fill=dataV$labelCols,horiz=FALSE,cex                        =1,border=NA,bty="n")
+ # dev.off.all()
+ }
> 
> plot_original_data_vector(dataV)   
[1] 1
[1] 2
[1] 3
[1] 4
[1] 5
[1] 6
[1] 7
[1] "legend"
Warnmeldung:
In if (is.na(dataV)) { :
  Bedingung hat L"ange > 1 und nur das erste Element wird benutzt
> widths[,-1]
Fehler in widths[, -1] : falsche Anzahl von Dimensionen
> widths[-1]
[1] 0.4444444 0.1111111
> widths
[1] 0.4444444 0.4444444 0.1111111
> [-3]
Fehler: Unerwartete(s) '[' in "["
> widths[-3]
[1] 0.4444444 0.4444444
> 
> 
> plot_original_data_vector<-function(dataV=NA,src="",layerNames=""){
+ dev.off.all()
+ # load data from source
+ if(is.na(dataV)){
+ dataV<-load_data_as_vectors(src,layerNames)
+ }
+ #colors
+ distinctcols<-read.csv("./code/scripts/64distinctColors.csv")
+ names(distinctcols)<-c("r","g","b")
+ distinctcols<-distinctcols/255
+ distinctcols<-apply(distinctcols,1,function(x){do.call(rgb,as.list(x))})
+ dataV$labelCols<-distinctcols[1:length(dataV$uniqueLabels)]
+ names(dataV$labelCols)<-dataV$uniqueLabels
+ 
+ # PLOT
+ laymat<-matrix(c(1:6),3,2,byrow=T)
+ laymat<-rbind(laymat,c(7,7))
+ laymat<-cbind(laymat,8)
+ widths=c(4/9,4/9,1/9)
+ heights=c(2/9,2/9,2/9,4/9)
+ hw<-c(sum(widths[,-3]),sum(heights))*15
+ par(mai=rep(0,4),oma=rep(0,4))
+ # pdf(paste0("./code/output/","original_data_vector.pdf"),hw[1],hw[2])
+ lo<-layout(laymat,widths=widths,heights=heights)
+ for (i in c(1:length(dataV$data))) {
+ print(i)
+ plot(dataV$data[[i]]
+ ,col=dataV$labelCols[
+ as.character(dataV$data[[i]]$LU)
+ ]
+ ,border=NA,main=years[i])
+ }
+ print("legend")
+ plot(1,type="n",axes=FALSE,bty="n",xlab="",ylab="")
+ legend("left",legend=dataV$uniqueLabels,fill=dataV$labelCols,horiz=FALSE,ce<V$uniqueLabels,fill=dataV$labelCols,horiz=FALSE,cex                        =1,border=NA,bty="n")
+ # dev.off.all()
+ }
> 
> plot_original_data_vector(dataV)   
Fehler in widths[, -3] : falsche Anzahl von Dimensionen
Zus"atzlich: Warnmeldung:
In if (is.na(dataV)) { :
  Bedingung hat L"ange > 1 und nur das erste Element wird benutzt
> 
> plot_original_data_vector<-function(dataV=NA,src="",layerNames=""){
+ dev.off.all()
+ # load data from source
+ if(is.na(dataV)){
+ dataV<-load_data_as_vectors(src,layerNames)
+ }
+ #colors
+ distinctcols<-read.csv("./code/scripts/64distinctColors.csv")
+ names(distinctcols)<-c("r","g","b")
+ distinctcols<-distinctcols/255
+ distinctcols<-apply(distinctcols,1,function(x){do.call(rgb,as.list(x))})
+ dataV$labelCols<-distinctcols[1:length(dataV$uniqueLabels)]
+ names(dataV$labelCols)<-dataV$uniqueLabels
+ 
+ # PLOT
+ laymat<-matrix(c(1:6),3,2,byrow=T)
+ laymat<-rbind(laymat,c(7,7))
+ laymat<-cbind(laymat,8)
+ widths=c(4/9,4/9,1/9)
+ heights=c(2/9,2/9,2/9,4/9)
+ hw<-c(sum(widths[-3]),sum(heights))*15
+ par(mai=rep(0,4),oma=rep(0,4))
+ # pdf(paste0("./code/output/","original_data_vector.pdf"),hw[1],hw[2])
+ lo<-layout(laymat,widths=widths,heights=heights)
+ for (i in c(1:length(dataV$data))) {
+ print(i)
+ plot(dataV$data[[i]]
+ ,col=dataV$labelCols[
+ as.character(dataV$data[[i]]$LU)
+ ]
+ ,border=NA,main=years[i])
+ }
+ print("legend")
+ plot(1,type="n",axes=FALSE,bty="n",xlab="",ylab="")
+ legend("left",legend=dataV$uniqueLabels,fill=dataV$labelCols,horiz=FALSE,ce<V$uniqueLabels,fill=dataV$labelCols,horiz=FALSE,cex                        =1,border=NA,bty="n")
+ # dev.off.all()
+ }
> 
> plot_original_data_vector(dataV)   
[1] 1
[1] 2
[1] 3
[1] 4
[1] 5
[1] 6
[1] 7
[1] "legend"
Warnmeldung:
In if (is.na(dataV)) { :
  Bedingung hat L"ange > 1 und nur das erste Element wird benutzt
> sensitivity_base_case<-list(
+ pixelWidth=pixelWidth
+ lagsINmeters=lagsINmeters
Fehler: Unerwartete(s) Symbol in:
"pixelWidth=pixelWidth
lagsINmeters"
> lags=lags
Fehler: Objekt 'lags' nicht gefunden
> )
Fehler: Unerwartete(s) ')' in ")"
> sensitivity_base_case<-list(
+ pixelWidth=pixelWidth,
+ lagsINmeters=lagsINmeters,
+ lags=lags
+ )
Fehler: Objekt 'pixelWidth' nicht gefunden
> pixelWidth
Fehler: Objekt 'pixelWidth' nicht gefunden
> pixelWidth<-200
> lagsINmeters<-c(50,150,450,1350,4050)
> lags=lagsINmeters/pixelWidth
> lags=2*round((lags+1)/2)-1
> 
> sensitivity_base_case<-list(
+ pixelWidth=pixelWidth,
+ lagsINmeters=lagsINmeters,
+ lags=lags
+ )
> sensitivity_base_case
$pixelWidth
[1] 200

$lagsINmeters
[1]   50  150  450 1350 4050

$lags
[1]  1  1  3  7 21

> sens.basecase<-list(
+ pixelWidth=pixelWidth,
+ lagsINmeters=lagsINmeters,
+ lags=lags
+ )
> sens.runs<-5
> sens.testpars.lagsINmeters<-list(lagsINmeters/2,lagsINmeters[-1])
> sens.testpars.lagsINmeters
[[1]]
[1]   25   75  225  675 2025

[[2]]
[1]  150  450 1350 4050

> lagsINmeters
[1]   50  150  450 1350 4050
> sens.testpars.lagsINmeters<-list(lagsINmeters/2,lagsINmeters[-2])
> sens.testpars.lagsINmeters
[[1]]
[1]   25   75  225  675 2025

[[2]]
[1]   50  450 1350 4050

> sens.testpars.lagsINmeters<-list(lagsINmeters/2,lagsINmeters[-c(1:2)])
> sens.testpars.lagsINmeters
[[1]]
[1]   25   75  225  675 2025

[[2]]
[1]  450 1350 4050

> sens.testpars.pixelWidth<-list(pixelWidth*2)
> sens.testpars.lagsINmeters<-list(lagsINmeters/2,lagsINmeters[-c(1:2)])
> sens.testpars.lags=sens.testpars.lagsINmeters/sens.testpars.pixelWidth
Fehler in sens.testpars.lagsINmeters/sens.testpars.pixelWidth : 
  nicht-numerisches Argument f"ur bin"aren Operator
> sens.testpars.lags=2*round((sens.testpars.lags+1)/2)-1
Fehler: Objekt 'sens.testpars.lags' nicht gefunden
> sens.testpars
Fehler: Objekt 'sens.testpars' nicht gefunden
> sens.testpars.*
+ 
> sens.testpars.pixelWidth
[[1]]
[1] 400

> sens.testpars.lagsINmeters
[[1]]
[1]   25   75  225  675 2025

[[2]]
[1]  450 1350 4050

> sens.testpars.lags
Fehler: Objekt 'sens.testpars.lags' nicht gefunden
> 